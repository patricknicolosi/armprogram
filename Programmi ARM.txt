1. RICERCA DEL MASSIMO E MINIMO IN UNA LISTA DI NUMERI


LISTA		DCD		444,1,800,283	//Dichiaro la lista di numeri
DIM		DCD		4		//Dichiamo la dimensione della lista
MIN		DCD		9999		//Dichiaro un minimo provvisorio
MAX		DCD		0		//Dichiaro un massimo provvisorio
			
		MOV		R0,#LISTA	//Punto al primo elemento della lista
		MOV		R1,#DIM		//Punto e assegno valore al registro R1 da DIM
		LDR		R1,[R1]
		MOV		R2,#MIN		//Punto e assegno valore al registro R2 da MIN
		LDR		R2,[R2]
		MOV		R3,#MAX		//Punto e assegno valore al registro R3 da MAX
		LDR		R3,[R3]
		
CICLO		SUBS		R1,R1,#1		//Dico sin da subito che se la dimensione è minore di 0, e quindi si è esaurita la lista, bisogna uscire dal ciclo
		BLT		FINE	
		LDR		R4,[R0]		//Carico in un registro provvisorio utile al calcolo il valore del primo elemento della lista
		CMP		R4,R3		//Dato R4 il valore da confrontare e R3 il massimo, trovare il massimo provvisorio vuol dire trovare quel numero R3 che sottratto a R4 mi da un numero positivo 
		BGT		MASSIMO
		CMP		R4,R2		//Faccio le stesse cose ma invertite per trovare il minimo
		BLT		MINIMO
		ADD		R0,R0,#4
		B		CICLO
		
MASSIMO		MOV		R3,R4		//Nel caso in cui trovo un massimo provvisorio allora lo inserisco in R3 usato per memorizzare il massimo e nella riga successiva aumento il puntatore.
		ADD		R0,R0,#4
		B		CICLO      
		
MINIMO		MOV		R2,R4
		ADD		R0,R0,#4
		B		CICLO
		
FINE		END




2. RICERCA DI UN ELEMENTO IN UN ARRAY


LISTA		DCD		1,2,34,56		//Dichiaro la lista
DIM		DCD		4		//Dichiaro la dimensione
RICERCATO	DCD		3		//Dichiaro l'elemento da cercare: il "ricercato"
		
		MOV		R0,#LISTA
		MOV		R1,#DIM
		LDR		R1,[R1]
		MOV		R2,#RICERCATO
		LDR		R2,[R2]
		MOV		R3,#1		//Utilizzo R3 come se fosse un bit di esito che mi ritorna 0 se ha trovato l'elemento ricercato e che per tale motivo setto a 1 di default
		
CICLO		LDR		R4,[R0]		//Assume valore del primo elemento della lista
		SUBS		R4,R4,R2		//Trovare un elemento uguale a quello ricercato, vuol dire trovare se stesso e cioè trovare quell'elemento che sottratto a se stesso da esattamente 0 (1-1=0, 100-100=0)
		BEQ		TROVATO	//Salto a TROVATO
		ADD		R0,R0,#4 	//Aumento il puntatore per puntare all'elemento successivo
		SUBS		R1,R1,#1		//Faccio sempre una verifica sulla dimensione della lista
		BGT		CICLO
		
		B		FINE		// Se non ho trovato l'elemento dopo aver ciclato tutto il vettore vado direttamente alla fine del programma
		
TROVATO	MOV		R3,#0		//Se ho trovato l'elemento aggiorno il bit di stato dal valore 1 (false) di default a 0 (true)
		B		FINE		//Trovato l'elemento salto alla fine
		
FINE		END


3. RICERCA DI UN ELEMENTO IN UN ARRAY E CONTA IL NUMERO DI OCCORRENZE

LISTA		DCD		1,34,34,34
DIM		DCD		4
RICERCATO	DCD		34
		
		MOV		R0,#LISTA
		MOV		R1,#DIM
		LDR		R1,[R1]
		MOV		R2,#RICERCATO
		LDR		R2,[R2]
		MOV		R3,#1
		
CICLO		LDR		R5,[R0]
		SUBS		R5,R5,R2
		BEQ		TROVATO
		ADD		R0,R0,#4
		SUBS		R1,R1,#1
		BGT		CICLO
		
		B		FINE
		
TROVATO	MOV		R3,#0
		ADD		R4,R4,#1		//Davvero molto simile a quello precedente con l'unica differenza che viene, oltre che aggiornato un bit di stato R3 da 1 a 0, un registro R4 che conta anche il numero di occorrenze
		ADD		R0,R0,#4
		SUBS		R1,R1,#1
		B		CICLO		//Questa è un'altra differenza rispetto al precedente codice, infatti se prima una volta trovata un'occorrenza era possibile uscire dal ciclo e interrompere il programma, questa volta l'array per verificare e contare tutte le occorrenze, deve essere ciclato tutto fino alla fine
		
FINE		END



4. MOLTIPLICARE NUMERI USANDO SOMME SUCCESSIVE 

		MOV		R0,#4
		MOV		R1,#3
		MOV		R2,#0
		
CICLO		ADD		R2,R2,R0
		SUBS		R1,R1,#1
		BGT		CICLO
		
		END


5. PRODOTTO VETTORIALE TRA DUE ARRAY 

LISTA1		DCD		1,2,3,4
LISTA2		DCD		1,2,3,3
DIM		DCD		4
RIS		DCD		0
		
		MOV		R0,#LISTA1
		MOV		R1,#LISTA2
		MOV		R2,#DIM
		LDR		R2,[R2]
		MOV		R7,#0
		
CICLO		LDR		R3,[R0]
		LDR		R4,[R1]
		B		PRODOTTO
		
PRODOTTO	ADD		R7,R7,R3
		SUBS		R4,R4,#1
		BGT		PRODOTTO
		
		ADD		R0,R0,#4
		ADD		R1,R1,#4
		SUBS		R2,R2,#1
		BGT		CICLO
		
		MOV		R8,#RIS
		STR		R7,[R8]
FINE		END